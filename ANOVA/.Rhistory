update.packages(ask='graphics',checkBuilt=TRUE)
installr
load("installr")
library("installr")
updateR()
q()
library(knitr); opts_chunk$set(error=TRUE, cache=FALSE)
library(psych)
library(jmv)
library(ggplot2)
dat_A <- read.csv("https://www.dropbox.com/s/7036my3n8lbb7nh/PSY.308b.FACTORIAL_DEMO_A.csv?dl=1")
dat_A.1 <- subset(dat_A, dat_A$Room == "Alone")
dat_A.2 <- subset(dat_A, dat_A$Room == "Full")
dat_A.3 <- subset(dat_A, dat_A$Room == "Half")
# Descriptives
desc.byroom <- descriptives(dat_A, vars = c('Score'), splitBy = 'Room', hist = TRUE, sd = TRUE, se = TRUE, skew = TRUE, kurt = TRUE)
desc.byroom
# OR you can try it this way
describeBy(dat_A, dat_A$Room)
hist(dat_A.1$Score)
hist(dat_A.2$Score)
hist(dat_A.3$Score)
dat_A.4 <- subset(dat_A, dat_A$Break == "Break")
dat_A.5 <- subset(dat_A, dat_A$Break == "No Break")
desc.bybreak <- descriptives(dat_A, vars = c('Score'), splitBy = 'Break', hist = TRUE, sd = TRUE, se = TRUE, skew = TRUE, kurt = TRUE)
desc.bybreak
# OR this way...
describeBy(dat_A, dat_A$Break)
hist(dat_A.4$Score)
hist(dat_A.5$Score)
anova(data = dat_A, dep = 'Score', factors = c('Break', 'Room'), homo = TRUE)
#Levene's test
#Residuals MS = within groups variance
#dfTOTAL = #groups - 1 / (#groups (N-1)) = df1/df2
anova(data = dat_A, dep = 'Score', factors = c('Break', 'Room'), effectSize = 'partEta', postHoc = c('Break', 'Room'), postHocCorr = 'bonf')
#Simple effect of Break at each level of Room
# Alone
anova(data = dat_A.1, dep = 'Score', factors = c('Break'), effectSize = 'eta', postHoc = 'Break', postHocCorr = 'bonf')
# Half
anova(data = dat_A.2, dep = 'Score', factors = c('Break'), effectSize = 'eta', postHoc = 'Break', postHocCorr = 'bonf')
# Full
anova(data = dat_A.3, dep = 'Score', factors = c('Break'), effectSize = 'eta', postHoc = 'Break', postHocCorr = 'bonf')
#FYI
anova(data = dat_A.1, dep = 'Score', factors = c('Break'), effectSize = 'eta', postHoc = 'Break', postHocCorr = 'bonf')
ttestIS(dat_A.1, vars = 'Score', group = 'Break', eqv = TRUE, effectSize = TRUE, ci = TRUE)
anova(data = dat_A, dep = 'Score', factors = c('Break', 'Room'), plotHAxis = 'Break', plotSepLines = 'Room')
# Recommended that you save this function in a separate R script or doc to refer to later (trust me, it's worth it).
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
library(knitr); opts_chunk$set(error=TRUE, cache=FALSE)
library(psych)
library(jmv)
library(ggplot2)
dat_A <- read.csv("https://www.dropbox.com/s/7036my3n8lbb7nh/PSY.308b.FACTORIAL_DEMO_A.csv?dl=1")
dat_A.1 <- subset(dat_A, dat_A$Room == "Alone")
dat_A.2 <- subset(dat_A, dat_A$Room == "Full")
dat_A.3 <- subset(dat_A, dat_A$Room == "Half")
# Descriptives
desc.byroom <- descriptives(dat_A, vars = c('Score'), splitBy = 'Room', hist = TRUE, sd = TRUE, se = TRUE, skew = TRUE, kurt = TRUE)
desc.byroom
# OR you can try it this way
describeBy(dat_A, dat_A$Room)
hist(dat_A.1$Score)
hist(dat_A.2$Score)
hist(dat_A.3$Score)
dat_A.4 <- subset(dat_A, dat_A$Break == "Break")
dat_A.5 <- subset(dat_A, dat_A$Break == "No Break")
desc.bybreak <- descriptives(dat_A, vars = c('Score'), splitBy = 'Break', hist = TRUE, sd = TRUE, se = TRUE, skew = TRUE, kurt = TRUE)
desc.bybreak
# OR this way...
describeBy(dat_A, dat_A$Break)
hist(dat_A.4$Score)
hist(dat_A.5$Score)
anova(data = dat_A, dep = 'Score', factors = c('Break', 'Room'), homo = TRUE)
#Levene's test
#Residuals MS = within groups variance
#dfTOTAL = #groups - 1 / (#groups (N-1)) = df1/df2
anova(data = dat_A, dep = 'Score', factors = c('Break', 'Room'), effectSize = 'partEta', postHoc = c('Break', 'Room'), postHocCorr = 'bonf')
#Simple effect of Break at each level of Room
# Alone
anova(data = dat_A.1, dep = 'Score', factors = c('Break'), effectSize = 'eta', postHoc = 'Break', postHocCorr = 'bonf')
# Half
anova(data = dat_A.2, dep = 'Score', factors = c('Break'), effectSize = 'eta', postHoc = 'Break', postHocCorr = 'bonf')
# Full
anova(data = dat_A.3, dep = 'Score', factors = c('Break'), effectSize = 'eta', postHoc = 'Break', postHocCorr = 'bonf')
#FYI  - simple interactions using t-tests instead of ANOVA (because IV only has 2 levels)
anova(data = dat_A.1, dep = 'Score', factors = c('Break'), effectSize = 'eta', postHoc = 'Break', postHocCorr = 'bonf')
ttestIS(dat_A.1, vars = 'Score', group = 'Break', eqv = TRUE, effectSize = TRUE, ci = TRUE)
# Recommended that you save this function in a separate R script or doc to refer to later (trust me, it's worth it).
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
# Recommended that you save this function in a separate R script or doc to refer to later (trust me, it's worth it).
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
anova(data = dat_A, dep = 'Score', factors = c('Break', 'Room'), plotHAxis = 'Break', plotSepLines = 'Room')
# Recommended that you save this function in a separate R script or doc to refer to later (trust me, it's worth it).
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
# Recommended that you save this function in a separate R script or doc to refer to later (trust me, it's worth it).
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
sumdat <- summarySE(dat_A, measurevar="Score", groupvars=c("Break","Room"))
plot1 <- ggplot(sumdat, aes(x = Room, y = Score, fill = Break))+
geom_bar(stat='identity', position= 'dodge') +
geom_errorbar(aes(ymin=Score-se, ymax=Score+se), position = position_dodge(.9), width = .1)
plot1 + ggtitle('Two-Way Interaction Graph of Performance Scores')
plot1 <- ggplot(sumdat, aes(x = Room, y = Score, fill = Break))+
geom_bar(stat='identity', position= 'dodge') +
geom_errorbar(aes(ymin=Score-se, ymax=Score+se), position = position_dodge(.9), width = .1)
plot1 + ggtitle('Two-Way Interaction Graph of Performance Scores')
setwd("C:/Users/p1n3d/R/ANOVA")
library(knitr); opts_chunk$set(error=TRUE, cache=FALSE)
library(psych)
library(jmv)
library(ggplot2)
#load data
dat <- read.csv("https://www.dropbox.com/s/mssrsx06ajq4p37/PSY.308b.DA3.csv?dl=1")
#View(dat) Row x Col
head(dat)
tail(dat)
message ("running 'dim(dat)'")
dim(dat)
View(dat)
#Question 1
#subset groups
dat.convo.Control <- subset(dat, dat$convo == "C")
dat.convo.Easy <- subset(dat, dat$convo == "E")
dat.convo.Difficult <- subset(dat, dat$convo == "D")
#descriptives 1 by convo
desc.by.convo <- descriptives(dat, vars = c('errors'), splitBy = 'convo', hist = TRUE, sd = TRUE, se = TRUE, skew = TRUE, kurt = TRUE)
desc.by.convo
#descriptives 2 by convo
describeBy(dat, dat$convo)
#histograms by convo
hist(dat.convo.Control$errors)
hist(dat.convo.Easy$errors)
hist(dat.convo.Difficult$errors)
#IV 2 = drive (L = low, M = moderate, D = difficult)
#subset groups by IV 2
dat.drive.Low <- subset(dat, dat$drive == "L")
dat.drive.Moderate <- subset(dat, dat$drive == "M")
dat.drive.Difficult <- subset(dat, dat$drive == "D")
#descriptives way 1 by drive
desc.by.drive <- descriptives(dat, vars = c('errors'), splitBy = 'drive', hist = TRUE, sd = TRUE, se = TRUE, skew = TRUE, kurt = TRUE)
desc.by.drive
#descriptives way 2 by drive
describeBy(dat, dat$drive)
#histograms by convo
hist(dat.drive.Low$errors)
hist(dat.drive.Moderate$errors)
hist(dat.drive.Difficult$errors)
anova(data = dat_A, dep = 'errors', factors = c('convo', 'drive'), homo = TRUE)
anova(data = dat, dep = 'errors', factors = c('convo', 'drive'), homo = TRUE)
#Levene's test
#Residuals MS = within groups variance
#dfTOTAL = #groups - 1 / (#groups (N-1)) = df1/df2
anova(data = dat, dep = 'error', factors = c('convo', 'drive'), effectSize = 'partEta', postHoc = c('convo', 'drive'), postHocCorr = 'bonf')
anova(data = dat, dep = 'errors', factors = c('convo', 'drive'), effectSize = 'partEta', postHoc = c('convo', 'drive'), postHocCorr = 'bonf')
#Simple effect of Driving Difficulty at each level of Conversation Difficulty
#Convo.Control
anova(data = dat.convo.Control, dep = 'errors', factors = c('drive'), effectSize = 'eta', postHoc = 'drive', postHocCorr = 'bonf')
#Convo.Easy
anova(data = dat.convo.Easy, dep = 'errors', factors = c('drive'), effectSize = 'eta', postHoc = 'drive', postHocCorr = 'bonf')
#Convo.Difficult
anova(data = dat.convo.Difficult, dep = 'errors', factors = c('drive'), effectSize = 'eta', postHoc = 'drive', postHocCorr = 'bonf')
#Recommended that you save this function in a separate R script or doc to refer to later (trust me, it's worth it).
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
sumdat <- summarySE(dat_A, measurevar="errors", groupvars=c("convo","drive"))
sumdat <- summarySE(dat, measurevar="errors", groupvars=c("convo","drive"))
plot1 <- ggplot(sumdat, aes(x = Room, y = Score, fill = Break))+
geom_bar(stat='identity', position= 'dodge') +
geom_errorbar(aes(ymin=Score-se, ymax=Score+se), position = position_dodge(.9), width = .1)
plot1 + ggtitle('Two-Way Interaction Graph of Driving Errors')
plot1 <- ggplot(sumdat, aes(x = convo, y = errors, fill = drive))+
geom_bar(stat='identity', position= 'dodge') +
geom_errorbar(aes(ymin=Score-se, ymax=Score+se), position = position_dodge(.9), width = .1)
plot1 + ggtitle('Two-Way Interaction Graph of Driving Errors')
plot1 <- ggplot(sumdat, aes(x = convo, y = errors, fill = drive))+
geom_bar(stat='identity', position= 'dodge') +
geom_errorbar(aes(ymin=errors-se, ymax=errors+se), position = position_dodge(.9), width = .1)
plot1 + ggtitle('Two-Way Interaction Graph of Driving Errors')
class(dat$errors)
class(dat$convo)
library(knitr); opts_chunk$set(error=TRUE, cache=FALSE)
library(psych)
library(jmv)
library(ggplot2)
#load data
dat <- read.csv("https://www.dropbox.com/s/mssrsx06ajq4p37/PSY.308b.DA3.csv?dl=1")
#View(dat) Row x Col
head(dat)
tail(dat)
message ("running 'dim(dat)'")
dim(dat)
#order IV's correctly
message("wrong order")
dat$convo
dat$drive
dat$convo <- factor(c("C", "E", "D"))
dat$drive <- factor(c("L", "M", "D"))
message("correct order")
dat$convo
dat$drive
library(knitr); opts_chunk$set(error=TRUE, cache=FALSE)
library(psych)
library(jmv)
library(ggplot2)
#load data
dat <- read.csv("https://www.dropbox.com/s/mssrsx06ajq4p37/PSY.308b.DA3.csv?dl=1")
#View(dat) Row x Col
head(dat)
tail(dat)
message ("running 'dim(dat)'")
dim(dat)
#order IV's correctly
message("wrong order")
dat$convo
dat$drive
dat$convo <- factor(dat$convo, levels = c("C", "E", "D"))
dat$drive <- factor(dat$drive, levels = c("L", "M", "D"))
message("correct order")
dat$convo
dat$drive
library(knitr); opts_chunk$set(error=TRUE, cache=FALSE)
library(psych)
library(jmv)
library(ggplot2)
#load data
dat <- read.csv("https://www.dropbox.com/s/mssrsx06ajq4p37/PSY.308b.DA3.csv?dl=1")
#View(dat) Row x Col
head(dat)
tail(dat)
message ("running 'dim(dat)'")
dim(dat)
#order IV's correctly
message("wrong order")
levels(dat$convo)
dat$drive
dat$convo <- factor(dat$convo, levels = c("C", "E", "D"))
dat$drive <- factor(dat$drive, levels = c("L", "M", "D"))
message("correct order")
dat$convo
dat$drive
library(knitr); opts_chunk$set(error=TRUE, cache=FALSE)
library(psych)
library(jmv)
library(ggplot2)
#load data
dat <- read.csv("https://www.dropbox.com/s/mssrsx06ajq4p37/PSY.308b.DA3.csv?dl=1")
#View(dat) Row x Col
head(dat)
tail(dat)
message ("running 'dim(dat)'")
dim(dat)
#order IV's correctly
message("wrong order")
levels(dat$convo)
levels(dat$drive)
dat$convo <- factor(dat$convo, levels = c("C", "E", "D"))
dat$drive <- factor(dat$drive, levels = c("L", "M", "D"))
message("correct order")
levels(dat$convo)
levels(dat$drive)
#Recommended that you save this function in a separate R script or doc to refer to later (trust me, it's worth it).
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
sumdat <- summarySE(dat, measurevar="errors", groupvars=c("convo","drive"))
plot1 <- ggplot(sumdat, aes(x = convo, y = errors, fill = drive))+
geom_bar(stat='identity', position= 'dodge') +
geom_errorbar(aes(ymin=errors-se, ymax=errors+se), position = position_dodge(.9), width = .1)
plot1 + ggtitle('Two-Way Interaction Graph of Driving Errors')
setwd("C:/Users/p1n3d/R/ANOVA")
plot1 <- ggplot(sumdat, aes(x = convo, y = errors, fill = drive))+
geom_bar(stat='identity', position= 'dodge') +
geom_errorbar(aes(ymin=errors-se, ymax=errors+se), position = position_dodge(.9), width = .1)
plot1 + ggtitle('Two-Way Interaction Graph of Driving Errors')
